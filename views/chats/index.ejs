<% include ../partials/head %>
<% include ../partials/nav %>
<aside class="chat-aside">
    <div class="chat-heading">Chats</div>
    <div class="chat-add" id="chat-add">
        <a data-toggle="modal" href="#chat-modal"><i class="fa fa-plus" aria-label="Add a chat"></i></a>
    </div>
    <div class="chat-list" id="chat-list">
        <% chats.forEach(function(chat) { %>
            <div class="chat-item">
                <a href="#" data-chat-id="<%= chat._id %>"><%= chat.name %></a>
            </div>
        <% }); %>
    </div>
</aside>
<main class="with-aside with-chat">
    <div class="chat-history" id="chat-history"></div>
</main>
<footer class="chat-footer with-aside">
    <form class="chat-form" id="chat-form" data-chat-id="">
        <input type="text" class="form-control" id="message-input" placeholder="Type your message here..." disabled/>
        <button type="submit" class="btn btn-primary" id="message-button" disabled>Send</button>
    </form>
</footer>

<div class="modal" tabindex="-1" role="dialog" id="chat-modal">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Users</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <select id="chat-modal-select" class="custom-select" multiple>
                </select>
            </div>
            <div class="modal-footer">
                <button id="chat-add-button" type="button" class="btn btn-primary ">Add selected users</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<% include ../partials/scripts %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.1/moment.min.js" integrity="sha256-ABVkpwb9K9PxubvRrHMkk6wmWcIHUE9eBxNZLXYQ84k=" crossorigin="anonymous"></script>
<script>
const socket = io.connect(":<%= process.env.PORT %>");

const chatHistory = $('#chat-history');
const chatList = $('#chat-list');


const chatAdd = $('#chat-add')
const chatModalSelect = $('#chat-modal-select');
const chatAddButton = $('#chat-add-button');
const myUserId = '<%= activeUser._id %>';

function requestChat(chatId, onSuccess, onError) {
    $.ajax({
        url: '/chats/' + chatId,
        method: 'GET',
        success: (data) => onSuccess(data)
    }).fail((data) => onError(data));
}

function populateChatHistory(chat) {
    chatHistory.empty();
    chat.messages.forEach((message) => buildAndShowMessageDiv(message));
    window.scroll(0, document.documentElement.offsetHeight);
}

function enableInputs() {
  $('#message-input').removeAttr('disabled');
  $('#message-button').removeAttr('disabled');

}

var escapeHTML = function (unsafe) {
  return unsafe.replace(/[&<"']/g, function(m) {
    switch (m) {
      case '&':
        return '&amp;';
      case '<':
        return '&lt;';
      case '"':
        return '&quot;';
      default:
        return '&#039;';
    }
  });
};

function buildAndShowMessageDiv(message) {
    var messageDiv = '<div class="message';
    if (message.user._id == myUserId) {
        messageDiv += ' message-active-user';
    }
    messageDiv += '">';
    if (message.user._id != myUserId) {
        messageDiv += `<div class="message-author"><a href="/users/${escapeHTML(message.user._id)}">${escapeHTML(message.user.firstName)} ${escapeHTML(message.user.lastName)}</a></div>`;
    }
    messageDiv += `<div class="message-content">${escapeHTML(message.content)}</div>`;
    messageDiv += `<div class="message-timestamp">${moment(message.createdAt).fromNow()}</div>`;
    messageDiv += '</div>';
    chatHistory.append(messageDiv);
}

chatList.on('click', 'a', function (e) {
    var chatId = $(this).attr('data-chat-id');
    e.preventDefault();
    requestChat(
        chatId,
        (chat) => {
            socket.emit('unsubscribe-all');
            populateChatHistory(chat);
            chatList.children('.chat-item').each(function () {
                $(this).removeClass('active');
            });
            $(this).parent().addClass('active');
            socket.emit('subscribe', {
                room: chatId
            });
            enableInputs();
        },
        (err) => alert(err)
    );
});

$('#chat-form').submit(function (e) {
    e.preventDefault();
    var userInput = $('#message-input').val();
    if (userInput.length <= 0) {
        return;
    }
    socket.emit('chat-message', {
        content: userInput,
        userId: myUserId
    });
    $('#message-input').val('');
});

// Adding a new chat
chatAdd.on("click","a",function (e) {
    getChatParners((users) => {
        if(false){ //TODO: Remove me
            users.forEach(function (user){
            var first = escapeHTML(user.firstName);
            var last = escapeHTML(user.lastName);
            var id = user._id;
            if(id != myUserId){
            var userOption = "<option id='" + id + "'>" + first + last + "</option>";
            chatModalSelect.append(userOption);
            }
            });
            chatModalSelect.append('');
        }
        },
    (err) => alert(err));
})

function getChatParners(onSuccess, onError) {
    $.ajax({
        url: '',//TODO: Change me to proper URL
        method: 'GET',
        success: (data) => onSuccess(data)
    }).fail((data) => onError(data));
}

function createNewChat(users, onSuccess, onError) {
    $.ajax({
        url: '', //TODO: Change me to proper URL
        method: 'POST',
        success: (data) => onSuccess(data) //TODO: Reload page? Get the new chat? Something smart like that...
    }).fail((data) => onError(data));
}

chatAddButton.click(function(_){
    if(false){ //TODO: Remove me
        var users = [];
        $('#chat-modal-select option:selected').each(function(select){
            users.push(select.attr('id'));
        })
        createNewChat(users)
    }
})
//Override multiple select behaviour, no ctrl/strg required
$('#chat-modal-select option').mousedown(function(e) {
    e.preventDefault();
    this.selected = !this.selected;
    return false;
});
//Socket IO
socket.on('chat-message', function (data) {
    buildAndShowMessageDiv(data);
    window.scroll(0, document.documentElement.offsetHeight);
});

socket.on('server-message', function (msg) {
   chatHistory.append(`<div class="server-message">${escapeHTML(msg)}</div>`);
   window.scroll(0, document.documentElement.offsetHeight);
});
</script>
<% include ../partials/footer %>
